{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nclass CartStore {\n  // Tableau pour stocker les articles du panier\n\n  constructor() {\n    this.getNumberArticle = () => {\n      let cart = getCart();\n      let number = 0;\n      for (let item of cart) {\n        number += item.quantity;\n      }\n      return number;\n    };\n    this.getTotalPrice = () => {\n      let cart = getCart();\n      let total = 0;\n      for (let item of cart) {\n        total += item.quantity * item.price;\n      }\n      return total;\n    };\n    _cart = localStorage.getItem(\"basket\");\n    if (_cart == null) {\n      this._cart = [];\n    } else {\n      this._cart = JSON.parse(_cart);\n    }\n    makeAutoObservable(this);\n  }\n  saveCart() {\n    localStorage.setItem(\"basket\", JSON.stringify(this.cart));\n  }\n  addCart(article) {\n    let cart = getCart();\n    let foundArticle = this.cart.find(item => item.id == article.id);\n    if (foundArticle != undefined) {\n      foundArticle.quantity++;\n    } else {\n      product.quantity = 1;\n      cart.push(article);\n    }\n    saveCart();\n  }\n  removeFromCart(article) {\n    this.cart = this.cart.filter(item => item.id != article.id);\n    saveCart();\n  }\n  changeQuantity(article, quantity) {\n    let foundArticle = this.cart.find(item => item.id == article.id);\n    if (foundArticle != undefined) {\n      foundArticle.quantity += quantity;\n      if (foundArticle.quantity <= 0) {\n        removeFromCart(foundArticle);\n      } else {\n        saveCart();\n      }\n    }\n  }\n  get cart() {\n    return this._cart;\n  }\n  set cart(cart) {\n    this._cart = cart;\n  }\n}\nexport default CartStore;","map":{"version":3,"names":["makeAutoObservable","CartStore","constructor","getNumberArticle","cart","getCart","number","item","quantity","getTotalPrice","total","price","_cart","localStorage","getItem","JSON","parse","saveCart","setItem","stringify","addCart","article","foundArticle","find","id","undefined","product","push","removeFromCart","filter","changeQuantity"],"sources":["C:/Nina/Scolarite/Matane/ProjetMultimedia/Borne/PM4-TP2/appreact/src/store/CartStore.js"],"sourcesContent":["import { makeAutoObservable} from \"mobx\";\r\n\r\n\r\nclass CartStore {\r\n    _cart; // Tableau pour stocker les articles du panier\r\n\r\n    constructor() {\r\n        _cart = localStorage.getItem(\"basket\");\r\n        if (_cart == null) {\r\n            this._cart = [];\r\n        } else {\r\n           this._cart = JSON.parse(_cart);\r\n        }\r\n        \r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    saveCart ()  {\r\n        localStorage.setItem(\"basket\", JSON.stringify(this.cart)); \r\n    }\r\n\r\n    addCart (article) {\r\n        let cart = getCart();\r\n        let foundArticle = this.cart.find (item => item.id == article.id );\r\n        if (foundArticle != undefined) {\r\n            foundArticle.quantity++;\r\n        } else {\r\n            product.quantity = 1;\r\n            cart.push(article);\r\n        }\r\n        saveCart();\r\n    }\r\n\r\n    removeFromCart (article) {\r\n        this.cart = this.cart.filter(item => item.id != article.id);\r\n        saveCart();\r\n    }\r\n\r\n    changeQuantity(article, quantity) {\r\n        let foundArticle = this.cart.find (item => item.id == article.id );\r\n        if (foundArticle != undefined) {\r\n            foundArticle.quantity+= quantity;\r\n            if (foundArticle.quantity <= 0) {\r\n                removeFromCart(foundArticle);\r\n            } else {\r\n                saveCart();\r\n            }\r\n        }\r\n    }\r\n\r\n    getNumberArticle = () => {\r\n        let cart = getCart();\r\n        let number = 0;\r\n        for (let item of cart) {\r\n            number += item.quantity;\r\n        }\r\n        return number;\r\n    }\r\n\r\n\r\n    get cart() { return this._cart; }\r\n\r\n    set cart(cart) { this._cart = cart; }\r\n\r\n\r\n    \r\n\r\n\r\n \r\n\r\n     getTotalPrice = () => {\r\n        let cart = getCart();\r\n        let total = 0;\r\n        for (let item of cart) {\r\n            total += item.quantity * item.price;\r\n        }\r\n        return total;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CartStore;"],"mappings":"AAAA,SAASA,kBAAkB,QAAO,MAAM;AAGxC,MAAMC,SAAS,CAAC;EACL;;EAEPC,WAAWA,CAAA,EAAG;IAAA,KA4CdC,gBAAgB,GAAG,MAAM;MACrB,IAAIC,IAAI,GAAGC,OAAO,CAAC,CAAC;MACpB,IAAIC,MAAM,GAAG,CAAC;MACd,KAAK,IAAIC,IAAI,IAAIH,IAAI,EAAE;QACnBE,MAAM,IAAIC,IAAI,CAACC,QAAQ;MAC3B;MACA,OAAOF,MAAM;IACjB,CAAC;IAAA,KAaAG,aAAa,GAAG,MAAM;MACnB,IAAIL,IAAI,GAAGC,OAAO,CAAC,CAAC;MACpB,IAAIK,KAAK,GAAG,CAAC;MACb,KAAK,IAAIH,IAAI,IAAIH,IAAI,EAAE;QACnBM,KAAK,IAAIH,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACI,KAAK;MACvC;MACA,OAAOD,KAAK;IAChB,CAAC;IAtEGE,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACtC,IAAIF,KAAK,IAAI,IAAI,EAAE;MACf,IAAI,CAACA,KAAK,GAAG,EAAE;IACnB,CAAC,MAAM;MACJ,IAAI,CAACA,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC;IACjC;IAEAZ,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEAiB,QAAQA,CAAA,EAAK;IACTJ,YAAY,CAACK,OAAO,CAAC,QAAQ,EAAEH,IAAI,CAACI,SAAS,CAAC,IAAI,CAACf,IAAI,CAAC,CAAC;EAC7D;EAEAgB,OAAOA,CAAEC,OAAO,EAAE;IACd,IAAIjB,IAAI,GAAGC,OAAO,CAAC,CAAC;IACpB,IAAIiB,YAAY,GAAG,IAAI,CAAClB,IAAI,CAACmB,IAAI,CAAEhB,IAAI,IAAIA,IAAI,CAACiB,EAAE,IAAIH,OAAO,CAACG,EAAG,CAAC;IAClE,IAAIF,YAAY,IAAIG,SAAS,EAAE;MAC3BH,YAAY,CAACd,QAAQ,EAAE;IAC3B,CAAC,MAAM;MACHkB,OAAO,CAAClB,QAAQ,GAAG,CAAC;MACpBJ,IAAI,CAACuB,IAAI,CAACN,OAAO,CAAC;IACtB;IACAJ,QAAQ,CAAC,CAAC;EACd;EAEAW,cAAcA,CAAEP,OAAO,EAAE;IACrB,IAAI,CAACjB,IAAI,GAAG,IAAI,CAACA,IAAI,CAACyB,MAAM,CAACtB,IAAI,IAAIA,IAAI,CAACiB,EAAE,IAAIH,OAAO,CAACG,EAAE,CAAC;IAC3DP,QAAQ,CAAC,CAAC;EACd;EAEAa,cAAcA,CAACT,OAAO,EAAEb,QAAQ,EAAE;IAC9B,IAAIc,YAAY,GAAG,IAAI,CAAClB,IAAI,CAACmB,IAAI,CAAEhB,IAAI,IAAIA,IAAI,CAACiB,EAAE,IAAIH,OAAO,CAACG,EAAG,CAAC;IAClE,IAAIF,YAAY,IAAIG,SAAS,EAAE;MAC3BH,YAAY,CAACd,QAAQ,IAAGA,QAAQ;MAChC,IAAIc,YAAY,CAACd,QAAQ,IAAI,CAAC,EAAE;QAC5BoB,cAAc,CAACN,YAAY,CAAC;MAChC,CAAC,MAAM;QACHL,QAAQ,CAAC,CAAC;MACd;IACJ;EACJ;EAYA,IAAIb,IAAIA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACQ,KAAK;EAAE;EAEhC,IAAIR,IAAIA,CAACA,IAAI,EAAE;IAAE,IAAI,CAACQ,KAAK,GAAGR,IAAI;EAAE;AAkBxC;AAEA,eAAeH,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}