{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nclass CartStore {\n  // Tableau pour stocker les articles du panier\n\n  constructor() {\n    _cart = localStorage.getItem(\"basket\");\n    if (_cart == null) {\n      this._cart = [];\n    } else {\n      this._cart = JSON.parse(_cart);\n    }\n    makeAutoObservable(this);\n  }\n  saveCart() {\n    localStorage.setItem(\"basket\", JSON.stringify(this.cart));\n  }\n  get cart() {\n    return this._cart;\n  }\n  set cart(cart) {\n    this._cart = cart;\n  }\n}\naddCart = article => {\n  let cart = getCart();\n  let foundArticle = cart.find(item => item.id == article.id);\n  if (foundArticle != undefined) {\n    foundArticle.quantity++;\n  } else {\n    product.quantity = 1;\n  }\n  cart.push(article);\n  saveCart(cart);\n};\nremoveFromCart = article => {\n  let cart = getCart();\n  cart = cart.filter(item => item.id != article.id);\n  saveCart(cart);\n};\nchangeQuantity = (article, quantity) => {\n  let cart = getCart();\n  let foundArticle = cart.find(item => item.id == article.id);\n  if (foundArticle != undefined) {\n    foundArticle.quantity += quantity;\n    if (foundArticle.quantity <= 0) {\n      removeFromCart(foundArticle);\n    } else {\n      saveCart(cart);\n    }\n  }\n};\ngetCart = () => {};\ngetNumberArticle = () => {\n  let cart = getCart();\n  let number = 0;\n  for (let item of cart) {\n    number += item.quantity;\n  }\n  return number;\n};\ngetTotalPrice = () => {\n  let cart = getCart();\n  let total = 0;\n  for (let item of cart) {\n    total += item.quantity * item.price;\n  }\n  return total;\n};\nexport default CartStore;","map":{"version":3,"names":["makeAutoObservable","CartStore","constructor","_cart","localStorage","getItem","JSON","parse","saveCart","setItem","stringify","cart","addCart","article","getCart","foundArticle","find","item","id","undefined","quantity","product","push","removeFromCart","filter","changeQuantity","getNumberArticle","number","getTotalPrice","total","price"],"sources":["C:/Nina/Scolarite/Matane/ProjetMultimedia/Borne/PM4-TP2/appreact/src/store/CartStore.js"],"sourcesContent":["import { makeAutoObservable} from \"mobx\";\r\n\r\n\r\nclass CartStore {\r\n    _cart; // Tableau pour stocker les articles du panier\r\n\r\n    constructor() {\r\n        _cart = localStorage.getItem(\"basket\");\r\n        if (_cart == null) {\r\n            this._cart = [];\r\n        } else {\r\n           this._cart = JSON.parse(_cart);\r\n        }\r\n        \r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    saveCart ()  {\r\n        localStorage.setItem(\"basket\", JSON.stringify(this.cart)); \r\n    }\r\n\r\n    get cart() { return this._cart; }\r\n\r\n    set cart(cart) { this._cart = cart; }\r\n\r\n\r\n}\r\n\r\naddCart = (article) => {\r\n    let cart = getCart();\r\n    let foundArticle = cart.find (item => item.id == article.id );\r\n    if (foundArticle != undefined) {\r\n        foundArticle.quantity++;\r\n    } else {\r\n        product.quantity = 1;\r\n    }\r\n    cart.push(article);\r\n    saveCart(cart);\r\n}\r\n\r\nremoveFromCart = (article) => {\r\n    let cart = getCart();\r\n    cart = cart.filter(item => item.id != article.id);\r\n    saveCart(cart);\r\n}\r\n\r\nchangeQuantity = (article, quantity) => {\r\n    let cart = getCart();\r\n    let foundArticle = cart.find (item => item.id == article.id );\r\n    if (foundArticle != undefined) {\r\n        foundArticle.quantity+= quantity;\r\n        if (foundArticle.quantity <= 0) {\r\n            removeFromCart(foundArticle);\r\n        } else {\r\n            saveCart(cart);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\ngetCart = () =>  {\r\n   \r\n}\r\n\r\ngetNumberArticle = () => {\r\n    let cart = getCart();\r\n    let number = 0;\r\n    for (let item of cart) {\r\n        number += item.quantity;\r\n    }\r\n    return number;\r\n}\r\n\r\n getTotalPrice = () => {\r\n    let cart = getCart();\r\n    let total = 0;\r\n    for (let item of cart) {\r\n        total += item.quantity * item.price;\r\n    }\r\n    return total;\r\n}\r\n\r\nexport default CartStore;"],"mappings":"AAAA,SAASA,kBAAkB,QAAO,MAAM;AAGxC,MAAMC,SAAS,CAAC;EACL;;EAEPC,WAAWA,CAAA,EAAG;IACVC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACtC,IAAIF,KAAK,IAAI,IAAI,EAAE;MACf,IAAI,CAACA,KAAK,GAAG,EAAE;IACnB,CAAC,MAAM;MACJ,IAAI,CAACA,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC;IACjC;IAEAH,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEAQ,QAAQA,CAAA,EAAK;IACTJ,YAAY,CAACK,OAAO,CAAC,QAAQ,EAAEH,IAAI,CAACI,SAAS,CAAC,IAAI,CAACC,IAAI,CAAC,CAAC;EAC7D;EAEA,IAAIA,IAAIA,CAAA,EAAG;IAAE,OAAO,IAAI,CAACR,KAAK;EAAE;EAEhC,IAAIQ,IAAIA,CAACA,IAAI,EAAE;IAAE,IAAI,CAACR,KAAK,GAAGQ,IAAI;EAAE;AAGxC;AAEAC,OAAO,GAAIC,OAAO,IAAK;EACnB,IAAIF,IAAI,GAAGG,OAAO,CAAC,CAAC;EACpB,IAAIC,YAAY,GAAGJ,IAAI,CAACK,IAAI,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIL,OAAO,CAACK,EAAG,CAAC;EAC7D,IAAIH,YAAY,IAAII,SAAS,EAAE;IAC3BJ,YAAY,CAACK,QAAQ,EAAE;EAC3B,CAAC,MAAM;IACHC,OAAO,CAACD,QAAQ,GAAG,CAAC;EACxB;EACAT,IAAI,CAACW,IAAI,CAACT,OAAO,CAAC;EAClBL,QAAQ,CAACG,IAAI,CAAC;AAClB,CAAC;AAEDY,cAAc,GAAIV,OAAO,IAAK;EAC1B,IAAIF,IAAI,GAAGG,OAAO,CAAC,CAAC;EACpBH,IAAI,GAAGA,IAAI,CAACa,MAAM,CAACP,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIL,OAAO,CAACK,EAAE,CAAC;EACjDV,QAAQ,CAACG,IAAI,CAAC;AAClB,CAAC;AAEDc,cAAc,GAAGA,CAACZ,OAAO,EAAEO,QAAQ,KAAK;EACpC,IAAIT,IAAI,GAAGG,OAAO,CAAC,CAAC;EACpB,IAAIC,YAAY,GAAGJ,IAAI,CAACK,IAAI,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIL,OAAO,CAACK,EAAG,CAAC;EAC7D,IAAIH,YAAY,IAAII,SAAS,EAAE;IAC3BJ,YAAY,CAACK,QAAQ,IAAGA,QAAQ;IAChC,IAAIL,YAAY,CAACK,QAAQ,IAAI,CAAC,EAAE;MAC5BG,cAAc,CAACR,YAAY,CAAC;IAChC,CAAC,MAAM;MACHP,QAAQ,CAACG,IAAI,CAAC;IAClB;EACJ;AACJ,CAAC;AAIDG,OAAO,GAAGA,CAAA,KAAO,CAEjB,CAAC;AAEDY,gBAAgB,GAAGA,CAAA,KAAM;EACrB,IAAIf,IAAI,GAAGG,OAAO,CAAC,CAAC;EACpB,IAAIa,MAAM,GAAG,CAAC;EACd,KAAK,IAAIV,IAAI,IAAIN,IAAI,EAAE;IACnBgB,MAAM,IAAIV,IAAI,CAACG,QAAQ;EAC3B;EACA,OAAOO,MAAM;AACjB,CAAC;AAEAC,aAAa,GAAGA,CAAA,KAAM;EACnB,IAAIjB,IAAI,GAAGG,OAAO,CAAC,CAAC;EACpB,IAAIe,KAAK,GAAG,CAAC;EACb,KAAK,IAAIZ,IAAI,IAAIN,IAAI,EAAE;IACnBkB,KAAK,IAAIZ,IAAI,CAACG,QAAQ,GAAGH,IAAI,CAACa,KAAK;EACvC;EACA,OAAOD,KAAK;AAChB,CAAC;AAED,eAAe5B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}