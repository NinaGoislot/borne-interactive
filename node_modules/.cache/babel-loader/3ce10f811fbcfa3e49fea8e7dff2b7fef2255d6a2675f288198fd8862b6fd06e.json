{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nclass CartStore {\n  // Tableau pour stocker les articles du panier\n\n  constructor() {\n    let currentCart = localStorage.getItem(\"Panier\");\n    if (currentCart == null) {\n      this._cart = [];\n    } else {\n      this._cart = JSON.parse(currentCart);\n    }\n    makeAutoObservable(this);\n  }\n  get cart() {\n    return this._cart;\n  }\n  set cart(cart) {\n    this._cart = cart;\n  }\n\n  //Sauvegarde le panier dans le localStorage\n  saveCart() {\n    localStorage.setItem(\"Panier\", JSON.stringify(this.cart));\n  }\n\n  //Ajoute un article dans le panier\n  addCart(article) {\n    let foundArticle = this.cart.find(item => item.id == article.id);\n    if (foundArticle != undefined) {\n      foundArticle.quantity++;\n    } else {\n      article.quantity = 1;\n      this.cart.push(article);\n    }\n    this.saveCart();\n  }\n\n  //Retire un article du panier\n  removeFromCart(article) {\n    this.cart = this.cart.filter(item => item.id != article.id);\n    this.saveCart();\n  }\n  changeQuantity(article, quantity) {\n    let foundArticle = this.cart.find(item => item.id == article.id);\n    if (foundArticle != undefined) {\n      foundArticle.quantity += quantity;\n      if (foundArticle.quantity <= 0) {\n        this.removeFromCart(foundArticle);\n      } else {\n        this.saveCart();\n      }\n    }\n  }\n\n  //Récupère le nombre total d'articles dans le panier\n  getNumberArticle() {\n    let number = 0;\n    for (let item of this.cart) {\n      number += item.quantity;\n    }\n    return number;\n  }\n\n  //Récupère le montant total du panier\n  getTotalPrice() {\n    let total = 0;\n    for (let item of this.cart) {\n      total += item.quantity * item.price;\n    }\n    return total;\n  }\n\n  //Récupère la quantité d'un article présent dans le panier\n  getQuantityForArticle(article) {\n    const foundArticle = this.cart.find(item => item.id === article.id);\n    return foundArticle ? foundArticle.quantity : 0;\n  }\n\n  //Récupère le contenu du panier sous forme d'objet\n  getCartContents() {\n    const cartContents = [];\n    for (const item of this.cart) {\n      cartContents.push({\n        id: item.id,\n        name: item.nom,\n        quantite: item.quantity,\n        prix: item.price\n        // Ajoutez d'autres propriétés de l'article si nécessaire\n      });\n    }\n\n    return cartContents;\n  }\n}\nexport default CartStore;","map":{"version":3,"names":["makeAutoObservable","CartStore","constructor","currentCart","localStorage","getItem","_cart","JSON","parse","cart","saveCart","setItem","stringify","addCart","article","foundArticle","find","item","id","undefined","quantity","push","removeFromCart","filter","changeQuantity","getNumberArticle","number","getTotalPrice","total","price","getQuantityForArticle","getCartContents","cartContents","name","nom","quantite","prix"],"sources":["C:/Nina/Scolarite/Matane/ProjetMultimedia/Borne/PM4-TP2/appreact/src/store/CartStore.js"],"sourcesContent":["import { makeAutoObservable} from \"mobx\";\r\n\r\n\r\nclass CartStore {\r\n    _cart; // Tableau pour stocker les articles du panier\r\n\r\n    constructor() {\r\n        let currentCart = localStorage.getItem(\"Panier\");\r\n        if (currentCart == null) {\r\n            this._cart = [];\r\n        } else {\r\n           this._cart = JSON.parse(currentCart);\r\n        }\r\n        \r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get cart() { return this._cart; }\r\n\r\n    set cart(cart) { this._cart = cart; }\r\n\r\n    //Sauvegarde le panier dans le localStorage\r\n    saveCart ()  {\r\n        localStorage.setItem(\"Panier\", JSON.stringify(this.cart)); \r\n    }\r\n\r\n    //Ajoute un article dans le panier\r\n    addCart (article) {\r\n        let foundArticle = this.cart.find (item => item.id == article.id );\r\n        if (foundArticle != undefined) {\r\n            foundArticle.quantity++;\r\n        } else {\r\n            article.quantity = 1;\r\n            this.cart.push(article);\r\n        }\r\n        this.saveCart();\r\n    }\r\n\r\n    //Retire un article du panier\r\n    removeFromCart (article) {\r\n        this.cart = this.cart.filter(item => item.id != article.id);\r\n        this.saveCart();\r\n    }\r\n\r\n    changeQuantity(article, quantity) {\r\n        let foundArticle = this.cart.find (item => item.id == article.id );\r\n        if (foundArticle != undefined) {\r\n            foundArticle.quantity+= quantity;\r\n            if (foundArticle.quantity <= 0) {\r\n                this.removeFromCart(foundArticle);\r\n            } else {\r\n                this.saveCart();\r\n            }\r\n        }\r\n    }\r\n\r\n    //Récupère le nombre total d'articles dans le panier\r\n    getNumberArticle() {\r\n        let number = 0;\r\n        for (let item of this.cart) {\r\n            number += item.quantity;\r\n        }\r\n        return number;\r\n    }\r\n\r\n    //Récupère le montant total du panier\r\n    getTotalPrice() {\r\n        let total = 0;\r\n        for (let item of this.cart) {\r\n            total += item.quantity * item.price;\r\n        }\r\n        return total;\r\n    }\r\n\r\n    //Récupère la quantité d'un article présent dans le panier\r\n    getQuantityForArticle(article) {\r\n        const foundArticle = this.cart.find((item) => item.id === article.id);\r\n        return foundArticle ? foundArticle.quantity : 0;\r\n      }\r\n   \r\n    //Récupère le contenu du panier sous forme d'objet\r\n    getCartContents() {\r\n        const cartContents = [];\r\n        for (const item of this.cart) {\r\n            cartContents.push({\r\n                id: item.id,\r\n                name: item.nom,\r\n                quantite: item.quantity,\r\n                prix: item.price,\r\n                // Ajoutez d'autres propriétés de l'article si nécessaire\r\n            });\r\n        }\r\n        return cartContents;\r\n    }\r\n\r\n}\r\n\r\nexport default CartStore;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}