{"ast":null,"code":"import { makeAutoObservable, observable, action, computed } from \"mobx\";\nclass CartStore {\n  // Tableau pour stocker les articles du panier\n\n  constructor() {\n    this.cart = [];\n    makeAutoObservable(this);\n  }\n  addToCart(article) {\n    const existingItem = this.cart.find(item => item.id === article.id);\n    if (existingItem) {\n      // Si l'article existe déjà dans le panier, on augmente sa quantité\n      currentArticle.quantity += 1;\n    } else {\n      // Sinon on l'ajoute avec une quantité de 1\n      this.cart.push({\n        ...article,\n        quantity: 1\n      });\n    }\n  }\n  removeFromCart(article) {\n    const currentArticle = this.existInCart(article.id);\n    if (currentArticle) {\n      // Si l'article existe déjà dans le panier, on diminue sa quantité\n      if (currentArticle.quantity > 1) {\n        // Si la quantité est supérieure à 1, on diminue sa quantité\n        currentArticle.quantity -= 1;\n      } else {\n        // Sinon, on le retire complètement du panier\n        this.cart = this.cart.filter(item => item.id !== article.id);\n      }\n\n      //currentArticle.quantity -= 1;\n      //const index = this.cart.findIndex((item) => item.id === article.id);\n      // this.cart.splice(index, 1);\n\n      //this.cart = this.cart.filter((item) => item.id !== article.id);\n    }\n  }\n\n  updateCartItemQuantity(article, newQuantity) {\n    const currentArticle = this.existInCart(article.id);\n    if (currentArticle) {\n      // Mettre à jour la quantité de l'article dans le panier\n      currentArticle.quantity = newQuantity;\n    }\n  }\n  existInCart(articleId) {\n    // Vérifiez si l'article est déjà dans le panier\n    const currentArticle = this.cart.find(item => item.id === articleId);\n    if (currentArticle) {\n      return currentArticle;\n    } else {\n      return false;\n    }\n  }\n  getQuantity(productId) {\n    const currentArticle = this.existInCart(productId);\n    if (currentArticle) {\n      return currentArticle.quantity;\n    }\n\n    // Si l'article n'est pas trouvé, on retourne 0\n    return 0;\n  }\n}\nexport default CartStore;","map":{"version":3,"names":["makeAutoObservable","observable","action","computed","CartStore","constructor","cart","addToCart","article","existingItem","find","item","id","currentArticle","quantity","push","removeFromCart","existInCart","filter","updateCartItemQuantity","newQuantity","articleId","getQuantity","productId"],"sources":["C:/Nina/Scolarite/Matane/ProjetMultimedia/Borne/PM4-TP2/appreact/src/store/CartStore.js"],"sourcesContent":["import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\n\r\n\r\nclass CartStore {\r\n    cart = []; // Tableau pour stocker les articles du panier\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    addToCart(article) {\r\n        const existingItem = this.cart.find((item) => item.id === article.id);\r\n        if (existingItem) {\r\n            // Si l'article existe déjà dans le panier, on augmente sa quantité\r\n            currentArticle.quantity += 1;\r\n        } else {\r\n            // Sinon on l'ajoute avec une quantité de 1\r\n            this.cart.push({\r\n                ...article,\r\n                quantity: 1\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    removeFromCart(article) {\r\n\r\n        const currentArticle = this.existInCart(article.id);\r\n\r\n        if (currentArticle) {\r\n            // Si l'article existe déjà dans le panier, on diminue sa quantité\r\n            if (currentArticle.quantity > 1) {\r\n                // Si la quantité est supérieure à 1, on diminue sa quantité\r\n                currentArticle.quantity -= 1;\r\n              } else {\r\n                // Sinon, on le retire complètement du panier\r\n                this.cart = this.cart.filter((item) => item.id !== article.id);\r\n              }\r\n\r\n            //currentArticle.quantity -= 1;\r\n            //const index = this.cart.findIndex((item) => item.id === article.id);\r\n           // this.cart.splice(index, 1);\r\n\r\n           //this.cart = this.cart.filter((item) => item.id !== article.id);\r\n        }\r\n    }\r\n\r\n    updateCartItemQuantity(article, newQuantity) {\r\n        const currentArticle = this.existInCart(article.id);\r\n    \r\n        if (currentArticle) {\r\n          // Mettre à jour la quantité de l'article dans le panier\r\n          currentArticle.quantity = newQuantity;\r\n        }\r\n      }\r\n\r\n    existInCart(articleId) {\r\n        // Vérifiez si l'article est déjà dans le panier\r\n        const currentArticle = this.cart.find((item) => item.id === articleId);\r\n        if (currentArticle) {\r\n            return currentArticle;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getQuantity(productId) {\r\n        const currentArticle = this.existInCart(productId);\r\n        if (currentArticle) {\r\n            return currentArticle.quantity;\r\n          }\r\n        \r\n          // Si l'article n'est pas trouvé, on retourne 0\r\n          return 0;\r\n    }\r\n}\r\n\r\nexport default CartStore;"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,MAAM;AAGvE,MAAMC,SAAS,CAAC;EACD;;EAEXC,WAAWA,CAAA,EAAG;IAAA,KAFdC,IAAI,GAAG,EAAE;IAGLN,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEAO,SAASA,CAACC,OAAO,EAAE;IACf,MAAMC,YAAY,GAAG,IAAI,CAACH,IAAI,CAACI,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;IACrE,IAAIH,YAAY,EAAE;MACd;MACAI,cAAc,CAACC,QAAQ,IAAI,CAAC;IAChC,CAAC,MAAM;MACH;MACA,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC;QACX,GAAGP,OAAO;QACVM,QAAQ,EAAE;MACd,CAAC,CAAC;IACN;EACJ;EAGAE,cAAcA,CAACR,OAAO,EAAE;IAEpB,MAAMK,cAAc,GAAG,IAAI,CAACI,WAAW,CAACT,OAAO,CAACI,EAAE,CAAC;IAEnD,IAAIC,cAAc,EAAE;MAChB;MACA,IAAIA,cAAc,CAACC,QAAQ,GAAG,CAAC,EAAE;QAC7B;QACAD,cAAc,CAACC,QAAQ,IAAI,CAAC;MAC9B,CAAC,MAAM;QACL;QACA,IAAI,CAACR,IAAI,GAAG,IAAI,CAACA,IAAI,CAACY,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MAChE;;MAEF;MACA;MACD;;MAEA;IACH;EACJ;;EAEAO,sBAAsBA,CAACX,OAAO,EAAEY,WAAW,EAAE;IACzC,MAAMP,cAAc,GAAG,IAAI,CAACI,WAAW,CAACT,OAAO,CAACI,EAAE,CAAC;IAEnD,IAAIC,cAAc,EAAE;MAClB;MACAA,cAAc,CAACC,QAAQ,GAAGM,WAAW;IACvC;EACF;EAEFH,WAAWA,CAACI,SAAS,EAAE;IACnB;IACA,MAAMR,cAAc,GAAG,IAAI,CAACP,IAAI,CAACI,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKS,SAAS,CAAC;IACtE,IAAIR,cAAc,EAAE;MAChB,OAAOA,cAAc;IACzB,CAAC,MAAM;MACH,OAAO,KAAK;IAChB;EACJ;EAEAS,WAAWA,CAACC,SAAS,EAAE;IACnB,MAAMV,cAAc,GAAG,IAAI,CAACI,WAAW,CAACM,SAAS,CAAC;IAClD,IAAIV,cAAc,EAAE;MAChB,OAAOA,cAAc,CAACC,QAAQ;IAChC;;IAEA;IACA,OAAO,CAAC;EACd;AACJ;AAEA,eAAeV,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}