{"ast":null,"code":"import { makeAutoObservable, observable, action, computed } from \"mobx\";\nclass CartStore {\n  // Tableau pour stocker les articles du panier\n\n  constructor() {\n    this._coupons = [];\n    makeAutoObservable(this);\n  }\n  addToCart(article) {\n    const existingItem = this.cart.find(item => item.id === article.id);\n    if (existingItem) {\n      // Si l'article existe déjà dans le panier, on augmente sa quantité\n      existingItem.quantity += 1;\n    } else {\n      // Sinon on l'ajoute avec une quantité de 1\n      this.cart.push({\n        ...article,\n        quantity: 1\n      });\n    }\n  }\n  removeFromCart(article) {\n    const existingItem = this.cart.find(item => item.id === article.id);\n    if (existingItem) {\n      if (existingItem.quantity > 1) {\n        // Si la quantité est supérieure à 1, décrémente la quantité\n        existingItem.quantity -= 1;\n      } else {\n        // Sinon, retire complètement l'article du panier\n        this.cart.remove(existingItem);\n      }\n    }\n  }\n  updateCartItemQuantity(article, newQuantity) {\n    const currentArticle = this.existInCart(article.id);\n    if (currentArticle) {\n      // Mettre à jour la quantité de l'article dans le panier\n      currentArticle.quantity = newQuantity;\n    }\n  }\n  existInCart(articleId) {\n    // Vérifiez si l'article est déjà dans le panier\n    const currentArticle = this.cart.find(item => item.id === articleId);\n    if (currentArticle) {\n      return currentArticle;\n    } else {\n      return false;\n    }\n  }\n  getQuantity(productId) {\n    const currentArticle = this.existInCart(productId);\n    if (currentArticle) {\n      return currentArticle.quantity;\n    }\n\n    // Si l'article n'est pas trouvé, on retourne 0\n    return 0;\n  }\n  getTotalItems() {\n    return this.cart.reduce((total, item) => total + item.quantity, 0);\n  }\n}\nexport default CartStore;","map":{"version":3,"names":["makeAutoObservable","observable","action","computed","CartStore","constructor","_coupons","addToCart","article","existingItem","cart","find","item","id","quantity","push","removeFromCart","remove","updateCartItemQuantity","newQuantity","currentArticle","existInCart","articleId","getQuantity","productId","getTotalItems","reduce","total"],"sources":["C:/Nina/Scolarite/Matane/ProjetMultimedia/Borne/PM4-TP2/appreact/src/store/CartStore.js"],"sourcesContent":["import { makeAutoObservable, observable, action, computed } from \"mobx\";\r\n\r\n\r\nclass CartStore {\r\n    _cart; // Tableau pour stocker les articles du panier\r\n\r\n    constructor() {\r\n        this._coupons = [];\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    addToCart(article) {\r\n        const existingItem = this.cart.find((item) => item.id === article.id);\r\n        if (existingItem) {\r\n            // Si l'article existe déjà dans le panier, on augmente sa quantité\r\n            existingItem.quantity += 1;\r\n        } else {\r\n            // Sinon on l'ajoute avec une quantité de 1\r\n            this.cart.push({ ...article, quantity: 1 });\r\n        }\r\n    }\r\n\r\n\r\n    removeFromCart(article) {\r\n\r\n        const existingItem = this.cart.find((item) => item.id === article.id);\r\n\r\n        if (existingItem) {\r\n            if (existingItem.quantity > 1) {\r\n              // Si la quantité est supérieure à 1, décrémente la quantité\r\n              existingItem.quantity -= 1;\r\n            } else {\r\n              // Sinon, retire complètement l'article du panier\r\n              this.cart.remove(existingItem);\r\n            }\r\n          }\r\n    }\r\n\r\n    updateCartItemQuantity(article, newQuantity) {\r\n        const currentArticle = this.existInCart(article.id);\r\n    \r\n        if (currentArticle) {\r\n          // Mettre à jour la quantité de l'article dans le panier\r\n          currentArticle.quantity = newQuantity;\r\n        }\r\n      }\r\n\r\n    existInCart(articleId) {\r\n        // Vérifiez si l'article est déjà dans le panier\r\n        const currentArticle = this.cart.find((item) => item.id === articleId);\r\n        if (currentArticle) {\r\n            return currentArticle;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getQuantity(productId) {\r\n        const currentArticle = this.existInCart(productId);\r\n        if (currentArticle) {\r\n            return currentArticle.quantity;\r\n          }\r\n        \r\n          // Si l'article n'est pas trouvé, on retourne 0\r\n          return 0;\r\n    }\r\n\r\n    getTotalItems() {\r\n        return this.cart.reduce((total, item) => total + item.quantity, 0);\r\n    }\r\n}\r\n\r\nexport default CartStore;"],"mappings":"AAAA,SAASA,kBAAkB,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,MAAM;AAGvE,MAAMC,SAAS,CAAC;EACL;;EAEPC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClBN,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEAO,SAASA,CAACC,OAAO,EAAE;IACf,MAAMC,YAAY,GAAG,IAAI,CAACC,IAAI,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;IACrE,IAAIJ,YAAY,EAAE;MACd;MACAA,YAAY,CAACK,QAAQ,IAAI,CAAC;IAC9B,CAAC,MAAM;MACH;MACA,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC;QAAE,GAAGP,OAAO;QAAEM,QAAQ,EAAE;MAAE,CAAC,CAAC;IAC/C;EACJ;EAGAE,cAAcA,CAACR,OAAO,EAAE;IAEpB,MAAMC,YAAY,GAAG,IAAI,CAACC,IAAI,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;IAErE,IAAIJ,YAAY,EAAE;MACd,IAAIA,YAAY,CAACK,QAAQ,GAAG,CAAC,EAAE;QAC7B;QACAL,YAAY,CAACK,QAAQ,IAAI,CAAC;MAC5B,CAAC,MAAM;QACL;QACA,IAAI,CAACJ,IAAI,CAACO,MAAM,CAACR,YAAY,CAAC;MAChC;IACF;EACN;EAEAS,sBAAsBA,CAACV,OAAO,EAAEW,WAAW,EAAE;IACzC,MAAMC,cAAc,GAAG,IAAI,CAACC,WAAW,CAACb,OAAO,CAACK,EAAE,CAAC;IAEnD,IAAIO,cAAc,EAAE;MAClB;MACAA,cAAc,CAACN,QAAQ,GAAGK,WAAW;IACvC;EACF;EAEFE,WAAWA,CAACC,SAAS,EAAE;IACnB;IACA,MAAMF,cAAc,GAAG,IAAI,CAACV,IAAI,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKS,SAAS,CAAC;IACtE,IAAIF,cAAc,EAAE;MAChB,OAAOA,cAAc;IACzB,CAAC,MAAM;MACH,OAAO,KAAK;IAChB;EACJ;EAEAG,WAAWA,CAACC,SAAS,EAAE;IACnB,MAAMJ,cAAc,GAAG,IAAI,CAACC,WAAW,CAACG,SAAS,CAAC;IAClD,IAAIJ,cAAc,EAAE;MAChB,OAAOA,cAAc,CAACN,QAAQ;IAChC;;IAEA;IACA,OAAO,CAAC;EACd;EAEAW,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACf,IAAI,CAACgB,MAAM,CAAC,CAACC,KAAK,EAAEf,IAAI,KAAKe,KAAK,GAAGf,IAAI,CAACE,QAAQ,EAAE,CAAC,CAAC;EACtE;AACJ;AAEA,eAAeV,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}