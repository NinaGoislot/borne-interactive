{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nconst TPS_VALUE = 0.05;\nconst TVQ_VALUE = 0.09975;\nclass CartStore {\n  // Tableau pour stocker les articles du panier\n\n  constructor() {\n    let currentCart = localStorage.getItem(\"Panier\");\n    let currentCommandNumber = localStorage.getItem(\"NbCommand\");\n    if (currentCart === null) {\n      this._cart = [];\n    } else {\n      this._cart = JSON.parse(currentCart);\n    }\n    if (currentCommandNumber === null) {\n      this._commandNumber = 0;\n    } else {\n      this._commandNumber = currentCommandNumber;\n    }\n    makeAutoObservable(this);\n  }\n  get cart() {\n    return this._cart;\n  }\n  set cart(cart) {\n    this._cart = cart;\n  }\n  get commandNumber() {\n    return this._commandNumber;\n  }\n  set commandNumber(commandNumber) {\n    this._commandNumber = commandNumber;\n  }\n\n  //Sauvegarde le panier dans le localStorage\n  saveCart() {\n    localStorage.setItem(\"Panier\", JSON.stringify(this.cart));\n  }\n\n  //Ajoute un article dans le panier\n  addCart(article) {\n    let foundArticle = this.cart.find(item => item.id === article.id);\n    if (foundArticle !== undefined) {\n      foundArticle.quantity++;\n    } else {\n      article.quantity = 1;\n      this.cart.push(article);\n    }\n    this.saveCart();\n  }\n\n  //Retire un article du panier\n  removeFromCart(article) {\n    if (article.quantity > 1) {\n      article.quantity--;\n    } else {\n      article.quantity = 0;\n      this.cart = this.cart.filter(item => item.id !== article.id);\n    }\n    this.saveCart();\n  }\n  changeQuantity(article, quantity) {\n    let foundArticle = this.cart.find(item => item.id === article.id);\n    if (foundArticle !== undefined) {\n      foundArticle.quantity += quantity;\n      if (foundArticle.quantity <= 0) {\n        this.removeFromCart(foundArticle);\n      } else {\n        this.saveCart();\n      }\n    }\n  }\n  getNumeroCommand() {\n    this.commandNumber++;\n    localStorage.setItem(\"Panier\", JSON.stringify(this.cart));\n    return this.commandNumber;\n  }\n\n  //Récupère le nombre total d'articles dans le panier\n  getNumberArticle() {\n    let number = 0;\n    for (let item of this.cart) {\n      number += item.quantity;\n    }\n    return number;\n  }\n\n  //Récupère le montant total du panier\n  getGrossCartTotal() {\n    let total = 0;\n    for (let item of this.cart) {\n      total += item.quantity * item.price;\n    }\n    return this.round(total);\n  }\n\n  //Calcul TPS\n  getTPS() {\n    let tps = this.getGrossCartTotal() * TPS_VALUE;\n    return this.round(tps);\n  }\n\n  //Calcul TVQ\n  getTVQ() {\n    let tvq = this.getGrossCartTotal() * TVQ_VALUE;\n    return this.round(tvq);\n  }\n\n  //Récupère le montant total du panier avec taxes\n  getCartTotalWithTaxes() {\n    let total = this.getGrossCartTotal() + this.getTPS() + this.getTVQ();\n    return this.round(total);\n  }\n\n  //Récupère la quantité d'un article présent dans le panier\n  getQuantityForArticle(article) {\n    const foundArticle = this.cart.find(item => item.id === article.id);\n    return foundArticle ? foundArticle.quantity : 0;\n  }\n\n  //Récupère le contenu du panier sous forme d'objet\n  getCartContents() {\n    const cartContents = [];\n    for (const item of this.cart) {\n      cartContents.push({\n        id: item._id,\n        name: item._name,\n        quantity: item._quantity,\n        price: item._price\n      });\n    }\n    return cartContents;\n  }\n\n  // Vide le localStorage\n  clearLocalStorage() {\n    localStorage.removeItem(\"Panier\");\n    for (const item of this.cart) {\n      if (item.quantity !== 0) {\n        item.quantity = 0;\n      }\n    }\n    this._cart = [];\n    this.saveCart();\n  }\n\n  //arrondir au centième\n  round(number) {\n    var _number$toString$spli;\n    const decimalCount = ((_number$toString$spli = number.toString().split('.')[1]) === null || _number$toString$spli === void 0 ? void 0 : _number$toString$spli.length) || 0;\n    if (decimalCount >= 3) {\n      number = parseFloat(number.toFixed(2));\n    }\n    return number;\n  }\n}\nexport default CartStore;","map":{"version":3,"names":["makeAutoObservable","TPS_VALUE","TVQ_VALUE","CartStore","constructor","currentCart","localStorage","getItem","currentCommandNumber","_cart","JSON","parse","_commandNumber","cart","commandNumber","saveCart","setItem","stringify","addCart","article","foundArticle","find","item","id","undefined","quantity","push","removeFromCart","filter","changeQuantity","getNumeroCommand","getNumberArticle","number","getGrossCartTotal","total","price","round","getTPS","tps","getTVQ","tvq","getCartTotalWithTaxes","getQuantityForArticle","getCartContents","cartContents","_id","name","_name","_quantity","_price","clearLocalStorage","removeItem","_number$toString$spli","decimalCount","toString","split","length","parseFloat","toFixed"],"sources":["C:/Nina/Scolarite/Matane/ProjetMultimedia/Borne/PM4-TP2/appreact/src/store/CartStore.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\nconst TPS_VALUE = 0.05;\r\nconst TVQ_VALUE =  0.09975;\r\n\r\n\r\nclass CartStore {\r\n    _cart; // Tableau pour stocker les articles du panier\r\n    _commandNumber\r\n\r\n    constructor() {\r\n        let currentCart = localStorage.getItem(\"Panier\");\r\n        let currentCommandNumber = localStorage.getItem(\"NbCommand\");\r\n        \r\n        if (currentCart === null) {\r\n            this._cart = [];\r\n        } else {\r\n            this._cart = JSON.parse(currentCart);\r\n        }\r\n\r\n        if (currentCommandNumber === null) {\r\n            this._commandNumber = 0;\r\n        } else {\r\n            this._commandNumber = currentCommandNumber;\r\n        }\r\n\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get cart() { return this._cart; }\r\n\r\n    set cart(cart) { this._cart = cart; }\r\n\r\n    get commandNumber() { return this._commandNumber; }\r\n\r\n    set commandNumber(commandNumber) { this._commandNumber = commandNumber; }\r\n\r\n    //Sauvegarde le panier dans le localStorage\r\n    saveCart() {\r\n        localStorage.setItem(\"Panier\", JSON.stringify(this.cart));\r\n    }\r\n\r\n    //Ajoute un article dans le panier\r\n    addCart(article) {\r\n        let foundArticle = this.cart.find(item => item.id === article.id);\r\n        if (foundArticle !== undefined) {\r\n            foundArticle.quantity++;\r\n        } else {\r\n            article.quantity = 1;\r\n            this.cart.push(article);\r\n        }\r\n        this.saveCart();\r\n    }\r\n\r\n    //Retire un article du panier\r\n    removeFromCart(article) {\r\n        if (article.quantity > 1) {\r\n            article.quantity--;\r\n        } else {\r\n            article.quantity = 0;\r\n            this.cart = this.cart.filter(item => item.id !== article.id);\r\n        }\r\n        this.saveCart();\r\n    }\r\n\r\n    changeQuantity(article, quantity) {\r\n        let foundArticle = this.cart.find(item => item.id === article.id);\r\n        if (foundArticle !== undefined) {\r\n            foundArticle.quantity += quantity;\r\n            if (foundArticle.quantity <= 0) {\r\n                this.removeFromCart(foundArticle);\r\n            } else {\r\n                this.saveCart();\r\n            }\r\n        }\r\n    }\r\n\r\n    getNumeroCommand() {\r\n        this.commandNumber++;\r\n        localStorage.setItem(\"Panier\", JSON.stringify(this.cart));\r\n        return this.commandNumber;\r\n    }\r\n\r\n    //Récupère le nombre total d'articles dans le panier\r\n    getNumberArticle() {\r\n        let number = 0;\r\n        for (let item of this.cart) {\r\n            number += item.quantity;\r\n        }\r\n        return number;\r\n    }\r\n\r\n    //Récupère le montant total du panier\r\n    getGrossCartTotal() {\r\n        let total = 0;\r\n        for (let item of this.cart) {\r\n            total += item.quantity * item.price;\r\n        }\r\n        return this.round(total);\r\n    }\r\n\r\n     //Calcul TPS\r\n     getTPS() {\r\n        let tps = this.getGrossCartTotal() * TPS_VALUE;\r\n        return this.round(tps);\r\n    }\r\n\r\n     //Calcul TVQ\r\n     getTVQ() {\r\n        let tvq = this.getGrossCartTotal() * TVQ_VALUE;\r\n        return this.round(tvq);\r\n    }\r\n\r\n     //Récupère le montant total du panier avec taxes\r\n     getCartTotalWithTaxes() {\r\n        let total = this.getGrossCartTotal() + this.getTPS() + this.getTVQ();\r\n        return this.round(total);\r\n    }\r\n\r\n    //Récupère la quantité d'un article présent dans le panier\r\n    getQuantityForArticle(article) {\r\n        const foundArticle = this.cart.find((item) => item.id === article.id);\r\n        return foundArticle ? foundArticle.quantity : 0;\r\n    }\r\n\r\n    //Récupère le contenu du panier sous forme d'objet\r\n    getCartContents() {\r\n        const cartContents = [];\r\n        for (const item of this.cart) {\r\n            cartContents.push({\r\n                id: item._id,\r\n                name: item._name,\r\n                quantity: item._quantity,\r\n                price: item._price\r\n            });\r\n        }\r\n        return cartContents;\r\n    }\r\n    \r\n\r\n    // Vide le localStorage\r\n    clearLocalStorage() {\r\n        localStorage.removeItem(\"Panier\");\r\n        for (const item of this.cart) {\r\n            if (item.quantity !== 0) {item.quantity = 0}\r\n        }\r\n        this._cart = [];\r\n        this.saveCart();\r\n    }\r\n\r\n    //arrondir au centième\r\n    round(number) {\r\n        const decimalCount = number.toString().split('.')[1]?.length || 0;\r\n        if (decimalCount >= 3) {\r\n            number = parseFloat(number.toFixed(2)); \r\n        }\r\n\r\n        return number;\r\n    }\r\n\r\n}\r\n\r\nexport default CartStore;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}